name: Build Release

on:
  push:
    branches:
      - main

permissions:
  contents: write


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew

      - name: Ensure directory exists
        run: mkdir -p build/libs

      - name: Build with Gradle
        run: ./gradlew buildJars > gradle_build_output.txt

      - name: Extract Version
        run: |
          version=$(grep -o 'v[0-9]\+\.[0-9]\+\.[0-9]\+' gradle_build_output.txt | head -n 1)
          echo "The version is: $version"

      - name: Save Version as Artifact
        run: |
          echo "$version" > version.txt
      - name: List build/libs contents
        run: ls -R build/libs

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
         name: build-artifacts
         path: build/libs/

      - name: Archive Logs
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: gradle_build_output.txt
  create-git-tag:
      needs: build
      if: ${{ success() }}
      runs-on: ubuntu-latest
      steps:
        - name: get version from previous step
          id: version
          # get the output from run: build  step id
          run :  echo ${{ steps.version.outputs.version }}

  create-tag:
    needs: build
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: build/libs/
      - name: Download logs
        uses: actions/download-artifact@v2
        with:
            name: logs
            path: gradle_build_output.txt
      - name: Bump version and push tag
        id: tag
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          WITH_V: true
          PRERELEASE: true

      - name: list the current directory
        run: ls -R

      - name: Check if build/libs exists
        run: |
          if [ -d "./build/libs" ]; then
            ls -R ./build/libs
          else
            echo "Directory 'build/libs' not found."
            exit 1
          fi
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          # we want build/libs/*.* to be released and the logs file
          files: |
            build/libs/*
            gradle_build_output.txt
          tag_name: ${{ steps.tag.outputs.tag }}
      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "version ${{ steps.tag.outputs.tag }}"
          description: "Runebot has been updated!"
          image: 'https://cdn.discordapp.com/attachments/971169239127965726/1123095605271613511/sheepbanner.gif'
          color: 0x0000ff
          content: "Runebot has been updated!"
          url: "https://github.com/Leigham/RunebotInstaller/releases/latest"
          username: "Runebot Releases"
          avatar_url: 'https://cdn.discordapp.com/attachments/971169239127965726/1123095576372838561/rbactual.gif'
