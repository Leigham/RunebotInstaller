name: Build Release

on:
  push:
    branches:
      - main

permissions:
  contents: write


jobs:
  test-mac :
    runs-on: macos-latest-xl
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v3
      -
        name: Output OS version
        run: echo "OS=$OSTYPE" >> $GITHUB_OUTPUT

  test-windows :
    runs-on: windows-latest
    needs:
      - test-mac
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v3
      -
        name: Output OS version
        run: echo "OS=$OSTYPE" >> $GITHUB_OUTPUT

  test-linux:
    needs:
      - test-windows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Output OS version
        run: echo "OS=$OSTYPE" >> $GITHUB_OUTPUT

      - name: exit job
        run: exit 1
  build:
    needs:
        - test-linux
        - test-windows
        - test-mac
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # gradle build
      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew buildJars > gradle_build_output.txt

      - name: Set output
        run: echo "version=$(grep -o 'v[0-9]\+\.[0-9]\+\.[0-9]\+' gradle_build_output.txt | head -n 1)" >> $GITHUB_OUTPUT
        id:  version

      # upload build artifacts
      - name: List build/libs contents
        run: ls -R build/libs

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
         name: build-artifacts
         path: |
          build/libs/
          gradle_build_output.txt

  release:
      needs: build
      if: ${{ success() }}
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3

        - name: Download build artifacts
          uses: actions/download-artifact@v3
          with:
            name: build-artifacts

        - name: Read version from file
          id: version
          run: echo "version=$(grep -o 'v[0-9]\+\.[0-9]\+\.[0-9]\+' gradle_build_output.txt | head -n 1)" >> $GITHUB_OUTPUT

        # output the version
        - name: log the output version
          run: echo ${{ steps.version.outputs.version }}
        # check the version is valid
        - name: Check version is valid
          run: |
            if [ -z "${{ steps.version.outputs.version }}" ]; then
              echo "Version not found."
              exit 1
            fi

        - name: Bump version and push tag
          id: tag
          uses: anothrNick/github-tag-action@1.67.0
          env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
            WITH_V: true
            CUSTOM_TAG: ${{ steps.version.outputs.version }}

        - name : output the tag
          run: echo "tag=${{ steps.tag.outputs.new_tag }}" >> $GITHUB_OUTPUT

        - name: Release
          uses: softprops/action-gh-release@v1
          with:
            files: |
              build/libs/*
            tag_name: ${{ steps.tag.outputs.new_tag }}
  release-success :
    needs: release
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      # send a discord embed
      - name: Send Discord Embed
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_AVATAR: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png'
          DISCORD_USERNAME: 'Runebot'
          DISCORD_EMBEDS: '[    { 
          "author": {  
            "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}",
            "name": "${{ github.actor }}",
            "url": "https://github.com/${{github.actor}}"
          },
          "title": "Runebot has been updated!",
          "url": "https://github.com/${{github.repository}}/commit/${{github.sha}}",
          "thumbnail": {
            "url": "https://cdn.discordapp.com/attachments/971169239127965726/1123095576372838561/rbactual.gif"
          },
          "image" :{
            "url": "https://cdn.discordapp.com/attachments/971169239127965726/1123095605271613511/sheepbanner.gif"
          },
          "color": 5763719,
          "timestamp": "${{github.event.head_commit.timestamp}}",
          "footer":{"text": "${{github.event.head_commit.timestamp}}"}
          }    ]'
  release-failure :
    needs: release
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      # send a discord embed
      - name: Send Discord Embed
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_AVATAR: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png'
          DISCORD_USERNAME: 'Runebot'
          DISCORD_EMBEDS: '[    { 
          "author": {  "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}", "name": "${{ github.actor }}", "url": "https://github.com/${{github.actor}}" },
          "url": "https://github.com/${{github.repository}}/commit/${{github.sha}}",
          "fields": [
          { "name": "Repository", "value": "[${{github.event.repository.name}}](${{github.event.repository.clone_url}})", "inline": true },
          { "name": "Branch", "value": "[${{github.ref_name}}](https://github.com/${{github.repository}}/tree/${{github.ref_name}})", "inline": true },
          { "name": "Event", "value": "${{github.event_name}}", "inline": true },
          { "name": "Job", "value": "${{github.job}}", "inline": true },
          { "name": "Commit Message", "value": "[${{ env.SHA }}](https://github.com/${{github.repository}}/commit/${{github.sha}}) - `${{github.event.head_commit.message}}`" },
          { "name": "Changed Files", "value": "${{ steps.changed-files.outputs.all_changed_files }}" },
          { "name": "Author", "value": "[${{github.event.head_commit.author.name}}](https://github.com/${{github.actor}})" }
          ],
          "color": 16711680,
          "timestamp": "${{github.event.head_commit.timestamp}}",
          "footer":{"text": "${{github.event.head_commit.timestamp}}"}
          }    ]'
  build-failed :
    needs: build
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      # send a discord embed
      - name: Send Discord Embed
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: 'Runebot'
          DISCORD_AVATAR: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png'
          DISCORD_EMBEDS: '[    { 
          "author": {  "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}", "name": "${{ github.actor }}", "url": "https://github.com/${{github.actor}}" },
          "url": "https://github.com/${{github.repository}}/commit/${{github.sha}}",
          "fields": [
          { "name": "Repository", "value": "[${{github.event.repository.name}}](${{github.event.repository.clone_url}})", "inline": true },
          { "name": "Branch", "value": "[${{github.ref_name}}](https://github.com/${{github.repository}}/tree/${{github.ref_name}})", "inline": true },
          { "name": "Event", "value": "${{github.event_name}}", "inline": true },
          { "name": "Job", "value": "${{github.job}}", "inline": true },
          { "name": "Commit Message", "value": "[${{ env.SHA }}](https://github.com/${{github.repository}}/commit/${{github.sha}}) - `${{github.event.head_commit.message}}`" },
          { "name": "Changed Files", "value": "${{ steps.changed-files.outputs.all_changed_files }}" },
          { "name": "Author", "value": "[${{github.event.head_commit.author.name}}](https://github.com/${{github.actor}})" }
          ],
          "color": 16711680,
          "timestamp": "${{github.event.head_commit.timestamp}}",
          "footer":{"text": "${{github.event.head_commit.timestamp}}"}
          }    ]'
